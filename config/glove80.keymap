/*
 * Copyright (c) 2020 The ZMK Contributors.key
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define HYPER LC(LS(LG(LALT)))

// layers
#define DEFAULT 0
#define RIGHT_HOLD 1
#define LEFT_HOLD 2
#define BOTH_HOLD 3 
#define MAGIC 4
#define WIN_NAV 5
#define NUMBERS 6

#define DA_HAT LS(RBKT)
#define DA_TILDE RA(RBKT)
#define DA_DLR RA(N4)

#define ______ &none
#define FACTORY_TEST 3
#define DK_LT NON_US_BACKSLASH
#define DK_GT LS(NON_US_BACKSLASH)
#define DK_BACK RA(NON_US_BACKSLASH)
#define DK_AMP LS(N6)
#define DK_PIPE RA(EQUAL)
#define DK_PLUS MINUS
#define LEFT_HAND_KEYS  \
     0  1  2  3  4      \
    10 11 12 13 14 15   \
    22 23 24 25 26 27   \
    34 35 36 37 38 39   \
    46 47 48 49 50 51 52 53 54 \
    64 65 66 67 68    69 70 71 


#define RIGHT_HAND_KEYS \
             5  6  7  8  9    \
          16 17 18 19 20 21   \
          28 29 30 31 32 33   \
          40 41 42 43 44 45   \
 55 56 57 58 59 60 61 62 63   \
 72 73 74    75 76 77 78 78
#define ENT ENTER
/ {
    behaviors {
      gui: homerow_mods_gui {
        compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS_GUI";
          #binding-cells = <2>;
          tapping-term-ms = <350>;
          flavor = "tap-preferred";
          bindings = <&kp>, <&kp>;
      };
      rm: homerow_mods_right {
          compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS";
          #binding-cells = <2>;
          tapping-term-ms = <200>;
          flavor = "balanced";
          bindings = <&kp>, <&kp>;
        //  hold-trigger-key-positions = <LEFT_HAND_KEYS>;
      }; 

      lm: homerow_mods_left {
          compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS";
          #binding-cells = <2>;
          tapping-term-ms = <200>;
          flavor = "balanced";
          bindings = <&kp>, <&kp>;
          //hold-trigger-key-positions = <RIGHT_HAND_KEYS>;
      };
      magic: magic_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MAGIC_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&rgb_ug_status_macro>;
      };
      thumbs: thumb_balanced {
            compatible = "zmk,behavior-hold-tap";
            label = "thumb_stuff";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&kp>;
      };
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
          if-layers = <1 2>;
          then-layer = <3>;
        };
      };

    combos {
        compatible = "zmk,combos";
        // base layer combos
        combo_j { timeout-ms = <50>; key-positions = <24 25>; bindings = <&kp J>; layers = <0>;};
        combo_ae { timeout-ms = <50>; key-positions = <29 30>; bindings = <&kp SEMI>; layers = <0>; };
        combo_oe { timeout-ms = <50>; key-positions = <29 31>; bindings = <&kp SQT>;  layers = <0>; };
        combo_aa { timeout-ms = <50>; key-positions = <30 31>; bindings = <&kp LBKT>;  layers = <0>; };
        combo_v { timeout-ms = <50>; key-positions = <37 38>; bindings = <&kp V>;  layers = <0>;};
        combo_z { timeout-ms = <50>; key-positions = <36 37>; bindings = <&kp Z>;  layers = <0>;};
        combo_dash { timeout-ms = <50>; key-positions = <42 43>; bindings = <&kp SLASH>; layers = <0>;};

        // arrow layer combos
        combo_app { timeout-ms = <50>; key-positions = <37 38>; bindings = <&kp K_APP>;  layers = <1>;};
        combo_backslash { timeout-ms = <50>; key-positions = <48 49>; bindings = <&kp DK_BACK>; layers = <1>; };
        combo_and_ampersand { timeout-ms = <50>; key-positions = <49 50>; bindings = <&kp DK_AMP>;layers = <1>; };
        combo_or_pipe { timeout-ms = <50>; key-positions = <59 60>; bindings = <&kp DK_PIPE>; layers = <1>; };
        combo_plus { timeout-ms = <50>; key-positions = <42 43>; bindings = <&kp DK_PLUS>; layers = <1>; };

        combo_alt_f4 { timeout-ms = <50>; key-positions = <38 41>; bindings = <&kp LA(F4)>; layers = <3>;};
      };

    };

    macros {
        rgb_ug_status_macro: rgb_ug_status_macro_0 { label = "RGB_UG_STATUS"; compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&rgb_ug RGB_STATUS>; };
        bt_0: bt_profile_macro_0 { label = "BT_0"; compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&out OUT_BLE>, <&bt BT_SEL 0>; };
        bt_1: bt_profile_macro_1 { label = "BT_1"; compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&out OUT_BLE>, <&bt BT_SEL 1>; };
        bt_2: bt_profile_macro_2 { label = "BT_2"; compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&out OUT_BLE>, <&bt BT_SEL 2>; };
        bt_3: bt_profile_macro_3 { label = "BT_3"; compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&out OUT_BLE>, <&bt BT_SEL 3>; };
        tilde_macro: tilde_macro { compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&macro_press &kp RALT>, <&macro_tap &kp RBKT>, <&macro_release &kp RALT>, <&macro_tap &kp SPACE>; };
        hat_macro: hat_macro { compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&kp DA_HAT &kp SPACE>; };
    };

    keymap {

        compatible = "zmk,keymap";
        default_layer {
            bindings = <
           &kp RBKT        ______         ______     ______      ______                                                                                        ______     ______      ______          ______ &kp RBKT
           ______          ______         ______     &kp Q      ______   ______                                                                       ______   ______     &kp BSLH    ______          ______ ______
           ______          ______         &kp W      &gui LGUI R &kp P      &kp B                                                                      &kp K   &kp L      &gui LGUI O &kp U           ______ ______
           ______          &lt NUMBERS F  &lm LALT A &lm LCTL S  &lm LSFT T &kp G                                                                      &kp M   &rm LSFT N &rm LCTL E  &rm LALT I      &kp Y  ______
           ______          ______         &kp X      &kp C       &kp D    ______    ______        ______ ______       ______      ______ ______       ______   &kp H      &kp COMMA   &lt WIN_NAV DOT ______ ______
           &magic MAGIC 0  ______         ______     ______      ______     &lt NONE_LAYER ENTER ______ &bootloader  &bootloader ______ &thumbs ARROWS SPACE   ______     ______      ______          ______ ______
            >;
        };

        right_hold {
            bindings = <
            ______ ______      ______          ______          ______                                                                                                           ______     ______       ______        ______    ______
            ______ ______      ______          &kp LS(N1)      ______          ______                                                                                ______     ______     &kp LS(MINUS) ______       ______    ______
            ______ ______      &kp DK_LT       &kp LS(N0)      &kp DK_GT       &kp LS(N5)                                                                            &kp LS(N7) &kp HOME   &kp UP       &kp END       ______    ______
            ______ &kp RA(N2)  &lm LALT RA(N7) &lm LCTL LS(N8) &lm LSFT LS(N9) &kp RA(N0)                                                                            &kp PG_UP  &kp LEFT   &kp DOWN     &kp RIGHT     &kp PG_DN ______
            ______ ______      &kp LS(N3)      &kp RA(N8)      &kp RA(N9)      ______     ______            ______      ______      ______      ______    ______     ______     &kp TAB    &kp LS(N2)   &kp ESC       ______    ______
            ______ ______      ______          ______          ______                 &thumbs NUMBERS SPACE ______      ______      ______      ______    ______                ______     ______       ______        ______    ______
            >;
        };

        left_hold {
            bindings = <
            ______ ______ ______   ______   ______                                                                                         ______ ______ ______ ______ ______ 
            ______ ______ ______   ______   ______   ______                                                                         ______ ______ ______ ______ ______ ______      
            ______ ______ ______   &kp LGUI ______   ______                                                                         ______ ______ ______ ______ ______ ______      
            ______ ______ &kp LALT &kp LCTL &kp LSFT ______                                                                         ______ ______ ______ ______ ______ ______      
            ______ ______ &kp ESC  ______   &kp DEL  ______     ______      ______      ______      ______    ______      ______    ______ ______ ______ ______ ______ ______      
            ______ ______ ______   ______   ______              ______      ______      ______      ______    ______ &mo ARROWS   ______ ______ ______ ______ ______ 
            >;
        };

        both_hold {
            bindings = <
            ______ ______ ______      ______      ______                                                                                                       ______        ______        ______        ______   ______ 
            ______ ______ ______      &kp F12     ______      ______                                                                             ______        ______        ______        ______        ______   ______      
            ______ ______ &kp F7      &kp F8      &kp F9      &kp F10                                                                       &tilde_macro &kp TAB       &kp TAB       &kp TAB       ______  ______
            ______ ______ &rm LALT F4 &rm LCTL F5 &rm LSFT F6 &kp F11                                                                         &kp DA_DLR &rm LSFT BKSP &rm LCTL BKSP &rm LALT BKSP ______ ______
            ______ ______ &kp F1      &kp F2      &kp F3      ______      ______  ______ ______      ______ ______ ______    &hat_macro &kp DEL       &kp DEL       &kp DEL       ______  ______
            ______ ______ ______      ______      ______                  ______  ______ ______      ______ ______ ______              ______        ______        ______        ______   ______ 
            >;
        };

        magic_layer {
            bindings = <
            &bt BT_CLR        &none               &none           &none           &none                                                                                                           &none      &none      &none      &none      &bt BT_CLR_ALL
            &none             &none               &none           &none           &none           &none                                                                                &none      &none      &none      &none      &none      &none
            &none             &rgb_ug RGB_SPI     &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_BRI &rgb_ug RGB_TOG                                                                      &none      &none      &none      &none      &none      &none
            &bootloader       &rgb_ug RGB_SPD     &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_BRD &rgb_ug RGB_EFF                                                                      &none      &none      &none      &none      &none      &bootloader
            &sys_reset        &none               &none           &none           &none           &none           &bt_2     &bt_3     &none            &none     &none     &none       &none      &none      &none      &none      &none      &sys_reset
            &none             &none               &none           &none           &none                           &bt_0     &bt_1     &out OUT_USB     &none     &none     &none                  &none      &none      &none      &none      &to FACTORY_TEST
            >;
        };
        
        win_nav {
            bindings = <
            ______ ______      ______ ______     ______                                                                                               ______ ______ ______ ______ ______
            ______ ______      ______ ______     ______     ______                                                                             ______ ______ ______ ______ ______ ______
            ______ &kp LG(N7)  ______ &kp LG(N1) &kp LG(N6) ______                                                                             ______ ______ ______ ______ ______ ______
            ______ &kp LG(N4)  ______ &kp LG(N2) &kp LG(N5) ______                                                                             ______ ______ ______ ______ ______ ______
            ______ ______      ______ &kp LG(N3) &kp LG(N8) ______            ______     ______      ______      ______      ______    ______  ______ ______ ______ ______ ______ ______
            ______ ______      ______ ______     ______                       ______ ______      ______      ______      ______    ______             ______ ______ ______ ______ ______
            >;
        };

        numbers {
            bindings = <
            ______ ______ ______ ______ ______                                                                    ______ ______ ______ ______ ______
            ______ ______ ______ ______ ______ ______                                                      ______ ______ ______ ______ ______ ______
            ______ ______ ______ ______ ______ ______                                                      ______ &kp N7 &kp N8 &kp N9 ______ ______      
            ______ ______ ______ ______ ______ ______                                                      ______ &kp N4 &kp N5 &kp N6 ______ ______      
            ______ ______ ______ ______ ______ ______    ______ ______ ______      ______ ______ ______    ______ &kp N1 &kp N2 &kp N3 ______ ______      
            ______ ______ ______ ______ ______           ______ ______ ______      ______ ______ &kp N1           ______ ______ ______ ______ ______
            >;
        };
    };
};
